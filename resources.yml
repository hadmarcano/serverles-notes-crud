# Notes DynamoDB Table
notesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: notes-${self:provider.stage}
    BillingMode: PAY_PER_REQUEST
    AttributeDefinitions:
      - AttributeName: notesId
        AttributeType: S
    KeySchema:
      - AttributeName: notesId
        KeyType: HASH

# Cognito User Pool
cognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: MyNotesUP-${self:provider.stage}

# User Pool web client
cognitoUserPoolWC:
  Type: AWS::Cognito::UserPoolClient
  Properties:
    ClientName: web
    AllowedOAuthFlows:
      - implicit
    AllowedOAuthFlowsUserPoolClient: true
    SupportedIdentityProviders:
      - COGNITO
    AllowedOAuthScopes:
      - phone
      - email
      - openid
      - profile
    CallbackURLs:
      - http://localhost:3000
    UserPoolId: !Ref cognitoUserPool

# User Pool Domain
cognitoUserPoolDomain:
  Type: AWS::Cognito::UserPoolDomain
  Properties:
    UserPoolId: !Ref cognitoUserPool
    Domain: mynotesupd-${self:provider.stage}

# Application Parameters SSM
# For use this parameter in the yml
# => ${ssm:/notes/dev/userPoolId}
userPoolIdParam:
  Type: AWS::SSM::Parameter
  Properties:
    Name: /notes/${self:provider.stage}/userPoolId
    Type: String
    Value: !GetAtt cognitoUserPool.Arn
